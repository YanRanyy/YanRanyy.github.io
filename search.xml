<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/05/10/EasyX%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/05/10/EasyX%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-EaxyX的使用笔记date-2024-5-19updated-2024-5-19tags-EaxyX库categories-笔记"><a href="#title-EaxyX的使用笔记date-2024-5-19updated-2024-5-19tags-EaxyX库categories-笔记" class="headerlink" title="title:EaxyX的使用笔记date:2024&#x2F;5&#x2F;19updated:2024&#x2F;5&#x2F;19tags:EaxyX库categories:笔记"></a>title:EaxyX的使用笔记<br>date:2024&#x2F;5&#x2F;19<br>updated:2024&#x2F;5&#x2F;19<br>tags:EaxyX库<br>categories:笔记</h2><h2 id="1-创建图形化窗口"><a href="#1-创建图形化窗口" class="headerlink" title="1.创建图形化窗口"></a>1.创建图形化窗口</h2><p>图形化处理不支持C语言输入输出函数</p><p>可以通过打印函数在控制台调试错误</p><p>1.1头文件:</p><p>graphics.h(包含已经被淘汰的函数)</p><p>easyx.h(只包含最新的函数)</p><p>1.2创建窗口:</p><p>initgraph(int x,int y,int style);打开,x,y表示窗口大小，style表示打开方式(不写style则只打开图形化处理窗口)</p><p>closegraph();关闭窗口,前一句要加while(1)防止闪屏</p><p>1.3窗口坐标:</p><p>两点确认一条线，横x，纵y</p><p>1.4设置窗口属性:</p><p>1.4.1颜色设置:setbkcolor,分为两种，分别是颜色宏和RGB配置，颜色宏是英语大写的单词，右键可以查看库里的颜色函数,RGB配置就是三原色R G B的参数（类似调色板)</p><p>颜色宏:setbkcolor(RED);</p><p>RGB配置:setbkcolor(RGB(0,0,0))，则是黑色</p><p>1.5窗口刷新:</p><p>不设置窗口刷新是不会显示的</p><p>cleardevice()</p><h2 id="2-绘图函数-int不用写"><a href="#2-绘图函数-int不用写" class="headerlink" title="2.绘图函数(int不用写)"></a>2.绘图函数(int不用写)</h2><p>2.1画线line(int x,int y,int xx,int yy);两个坐标，确定一条线</p><p>2.2画圆circle(int x,int y,int r);坐标，半径</p><p>2.3矩形rectangle(int x,int y,int xx,int yy);两个坐标，确定一个矩形</p><p>2.4填充圆和填充矩形颜色:setfillcolor();改变线的颜色:setlinecolor();</p><p>2.4.1圆带线填充:fillcircle(int x,int y,int r);</p><p>不带线填充:solidcircle(int x,int y,int r);</p><p>2.4.2矩形带线填充:fillrectangle(int x,int y,int xx,int yy);</p><p>矩形不带线填充:solidrectangle(int x,int y,int xx,int yy);</p><p>2.5窗口绘图可以使用for等函数进行绘图，比如画棋盘</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">qipan</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">400</span>; i += <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">0</span>, i, <span class="number">400</span>, i);</span><br><span class="line"><span class="built_in">line</span>(i, <span class="number">0</span>, i, <span class="number">400</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line"><span class="built_in">closegraph</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.6显示贴图双缓冲，解决一闪一闪的刷新率问题:</p><p>在创建窗口initgraph函数下加BeginBatchDraw();在结尾closegraph函数上加EndBatchDraw();在循环里最后加上显示每一帧FlushBatchDraw();</p><h2 id="3-贴图"><a href="#3-贴图" class="headerlink" title="3.贴图"></a>3.贴图</h2><p>3.1原式贴图</p><p>3.1.1IMAGE变量表示图片</p><p>加载图像:loadimage(IMAGE* img,URL);</p><p>缩放加载:loadimage(IMAGE* img,URL,int width,int height);width表示宽，height表示高</p><p>3.1.2显示图像:putimage(int x,int y,IMAGE* img);</p><p>例如加载一张名为tcs.jpg的图片</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IMAGE img;</span><br><span class="line"><span class="built_in">loadimage</span>(&amp;img,<span class="string">&quot;./Res/tcs.jpg&quot;</span>);</span><br><span class="line"><span class="built_in">putimage</span>(<span class="number">0</span>,<span class="number">0</span>,&amp;img);</span><br></pre></td></tr></table></figure><p>3.2 透明贴图</p><p>3.2.1通过图像的颜色二进制运算达到去背景图的效果</p><p>3.2.2素材：掩码图，背景图</p><p>3.2.3按照特定步骤贴图:</p><p>SRCAND 掩码图</p><p>SRCPAINT 背景图</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IMAGE test[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">loadimage</span>(test+<span class="number">0</span>,<span class="string">&quot;./Res/test.jpg&quot;</span>);</span><br><span class="line"><span class="built_in">loadimage</span>(test+<span class="number">1</span>,<span class="string">&quot;./Res/testbk.jpg&quot;</span>);</span><br><span class="line"><span class="built_in">putimage</span>(<span class="number">100</span>,<span class="number">100</span>,test+<span class="number">0</span>,SRCAND);</span><br><span class="line"><span class="built_in">putimage</span>(<span class="number">100</span>,<span class="number">100</span>,test+<span class="number">1</span>,SRCPAINT);</span><br></pre></td></tr></table></figure><h2 id="4-按键交互"><a href="#4-按键交互" class="headerlink" title="4.按键交互"></a>4.按键交互</h2><p>4.1阻塞按键交互:C++写的函数几乎都是阻塞，例如写一个小球移动和反弹</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Ball</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="type">int</span> r;</span><br><span class="line"><span class="type">int</span> dx;</span><br><span class="line"><span class="type">int</span> dy;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Ball</span> ball = &#123; <span class="number">400</span>,<span class="number">400</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">-5</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DrawBall</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">setfillcolor</span>(RED);</span><br><span class="line"><span class="built_in">solidcircle</span>(ball.x, ball.y, ball.r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MoveBall</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ball.x - ball.r &lt;= <span class="number">0</span> || ball.x + ball.r &gt;= <span class="number">800</span>)</span><br><span class="line">&#123;</span><br><span class="line">ball.dx = -ball.dx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ball.y - ball.r &lt;= <span class="number">0</span> || ball.y + ball.r &gt;= <span class="number">800</span>)</span><br><span class="line">&#123;</span><br><span class="line">ball.dy = -ball.dy;</span><br><span class="line">&#125;</span><br><span class="line">ball.x += ball.dx;</span><br><span class="line">ball.y += ball.dy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">800</span>, <span class="number">800</span>);</span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cleardevice</span>();</span><br><span class="line"><span class="built_in">DrawBall</span>();</span><br><span class="line"><span class="built_in">MoveBall</span>();</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">closegraph</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用结构体封装小球的数据，声明小球的绘图和移动方式,Sleep()是标准库里的移动速度函数</p><p>4.2用户输入按键对图像进行操控</p><p>4.2.1头文件</p><p>#include &lt;conio.h&gt;（getch()不需要回车确认输入)</p><p>4.2.2创建操控框架</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">keydown</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> userkey = _getch();</span><br><span class="line"><span class="keyword">switch</span> (userkey)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;</span>W<span class="number">&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">72</span>:</span><br><span class="line">myball.y -= <span class="number">5</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;</span>s<span class="number">&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;</span>S<span class="number">&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">80</span>:</span><br><span class="line">myball.y += <span class="number">5</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;</span>a<span class="number">&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;</span>A<span class="number">&#x27;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">75</span>:</span><br><span class="line">myball.x -= <span class="number">5</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;</span>d<span class="number">&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;</span>D<span class="number">&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">77</span>:</span><br><span class="line">myball.x += <span class="number">5</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用这个框架后如果发现其他图像在你不操控时也不动，那就是因为阻塞的原因，需要加上判断存在按键操作再处理</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(_kbhit())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">keydown</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Sleep也是阻塞函数，想流畅运行要用定时器函数</p><p>4.3定时器函数</p><p>4.3.1定时器要用到时间函数，要加上#include&lt;time.h&gt;头文件</p><p>4.3.2定时器输入时间间隔和定时器id,用静态变量记录每一次的结果</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Time</span><span class="params">(<span class="type">int</span> sjjg,<span class="type">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> startTime[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> endTime=<span class="built_in">clock</span>();<span class="comment">//clock统计程序运行到当前代码时间</span></span><br><span class="line"><span class="keyword">if</span>(endTime-startTime[id]&gt;sjjg)<span class="comment">//时间间隔大于定时器时间间隔触发定时器</span></span><br><span class="line">&#123;</span><br><span class="line">startTime[id]=endTime;<span class="comment">//开始时间改为上一次结束时间</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用到图像移动函数处,例如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">Time</span>(<span class="number">20</span>,<span class="number">0</span>))</span><br><span class="line"><span class="built_in">MoveBall</span>();</span><br></pre></td></tr></table></figure><p>4.4异步交互:</p><p>4.4.1非阻塞函数，比上面所写的更流畅，但要控制好定时器速度比如Time(20,1)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">keydown2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">GetAsyncKeyState</span>(VK_UP))</span><br><span class="line">&#123;</span><br><span class="line"> myball.y-=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">GetAsyncKeyState</span>(VK_DOWN))</span><br><span class="line">&#123;</span><br><span class="line"> myball.y+=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">GetAsyncKeyState</span>(VK_LEFT))</span><br><span class="line">&#123;</span><br><span class="line"> myball.x-=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">GetAsyncKeyState</span>(VK_RIGHT))</span><br><span class="line">&#123;</span><br><span class="line"> myball.x+=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-鼠标交互"><a href="#5-鼠标交互" class="headerlink" title="5.鼠标交互"></a>5.鼠标交互</h2><p>5.1写一个ExMessage类型变量去存储鼠标消息</p><p>5.2获取鼠标消息peekmessage(&amp;变量)</p><p>5.3讨论鼠标消息</p><p>msg.message(区分鼠标消息类型)</p><p>msg.x msg.y（鼠标当前坐标）</p><p>5.4框架示例(鼠标左键画圆，右键画方)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ExMessage msg;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">peekmessage</span>(&amp;msg))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(msg.message)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line"><span class="built_in">circle</span>(msg.x,msg.y,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_RBUTTONDOWN:</span><br><span class="line"><span class="built_in">rectangle</span>(msg.x<span class="number">-10</span>,msg.y<span class="number">-10</span>,msg.x+<span class="number">10</span>,msg.y+<span class="number">10</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实战项目后面会发一个贪吃蛇和AI寻路贪吃蛇"><a href="#实战项目后面会发一个贪吃蛇和AI寻路贪吃蛇" class="headerlink" title="实战项目后面会发一个贪吃蛇和AI寻路贪吃蛇"></a>实战项目后面会发一个贪吃蛇和AI寻路贪吃蛇</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
